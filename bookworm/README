.. -*- mode: rst -*-

---------------------------
Bookworm Installation Guide
---------------------------

Prerequisites
=============
    
1. Django 1.0.2 release
2. Python 2.5 or 2.6 (virtualenv recommended)
3. MySQL or other supported database (should be able to override in `local.py`)

Via easy_install:
  *  cssutils
  * python-openid (2.x)
  * python-yadis
  * twill
  * lxml
  * BeautifulSoup

Running `setup.py install` will install these packages for you.

Via subversion:

  * django_evolution 
  * svn checkout http://django-evolution.googlecode.com/svn/trunk/ django-evolution
  * cd django-evolution
  * sudo python setup.py install

Patching Django
===============

Bookworm requires one small patch that affects tests only.  It can be
found in the `patches/` directory and should be applied to your Django
source folder as:

`patch -p1 < /path/to/bookworm/patches/0002_generate_cache_key.diff`

Database
========

The first time you get here, manually create the database 
and user permissions according to values in ./settings.py

create database bookworm default character set = UTF8;

To set local settings, please write the modified values from settings.py in local.py, 
do not change settings.py. local.py overwrites the default settings.

Then, from the project root:

`python manage.py syncdb`
`python manage.py test library # Sanity check`

You should only need to run syncdb initially, or when the schema changes.

Fulltext index
--------------
You will need to create this manually after setting up the database:

`mysql> create fulltext index epubtext on library_htmlfile (words);`

Permissions
===========

By default, Bookworm expects to be able to write to its log directory
`$PROJECT_ROOT/log` and to the storage directory
`$PROJECT_ROOT/library/storage`. You will need to ensure that the web
server has write access there.

Cron
====
There is one required cron job, which updates the indexes and also
cleans up book metadata:

`$PROJECT_ROOT/search/index.sh`

You can run this at whatever frequency you prefer; I do it on the
half-hour.

Testing
=======

To test the models and views:
`python manage.py test library`

Development
===========
To run a local development server:
`python manage.py runserver`

To start over with a clean database:
`clear-db.sh`

clear-db takes optional arguments:

  * no arguments clears only the 'library' app 
  * 'auth' clears the base Django auth framework
  * 'openid' clears the django_authopenid database
  * 'all' clears all of the above

Other documentation is in `docs/`



